{
	"info": {
		"_postman_id": "151dad4a-8aa8-415e-ba6e-9607dce174fe",
		"name": "Court data adaptor with tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40175379",
		"_collection_link": "https://laa-court.postman.co/workspace/Core-data-adaptor~d0956e53-eeab-4f28-ae23-15952a53ff85/collection/40175379-151dad4a-8aa8-415e-ba6e-9607dce174fe?action=share&source=collection_link&creator=40175379"
	},
	"item": [
		{
			"name": "Search prosecution case",
			"item": [
				{
					"name": "V2",
					"item": [
						{
							"name": "Prosecution Case URN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Defendants Included\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.results[0]).to.haveOwnProperty('defendant_summaries');",
											"});",
											"",
											"pm.test(\"Results is Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"",
											"pm.test(\"Application summaries within Defendants is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var applications = json_data.results[0].defendant_summaries[0].application_summaries;",
											"    pm.expect(applications).to.be.a('array');",
											"});",
											"",
											"",
											"pm.test(\"Defendants within Results is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results[0].defendant_summaries;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Defendant Properties Are Correct\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendant = json_data.results[0].defendant_summaries[0];",
											"    pm.expect(defendant).to.haveOwnProperty('id');",
											"    pm.expect(defendant).to.haveOwnProperty('national_insurance_number');",
											"    pm.expect(defendant).to.haveOwnProperty('arrest_summons_number');",
											"    pm.expect(defendant).to.haveOwnProperty('first_name');",
											"    pm.expect(defendant).to.haveOwnProperty('middle_name');",
											"    pm.expect(defendant).to.haveOwnProperty('last_name');",
											"    pm.expect(defendant).to.haveOwnProperty('date_of_birth');",
											"    pm.expect(defendant).to.haveOwnProperty('proceedings_concluded');",
											"    pm.expect(defendant).to.haveOwnProperty('representation_order');",
											"    pm.expect(defendant).to.haveOwnProperty('offence_summaries');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"filter\": {\n    \"prosecution_case_reference\":\"{{urn}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/prosecution_cases",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"prosecution_cases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Defendant ASN",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Defendants Included\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.results[0]).to.haveOwnProperty('defendant_summaries');",
											"});",
											"",
											"pm.test(\"Results is Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Defendants within Results is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results[0].defendant_summaries;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Application summaries within Defendants is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var applications = json_data.results[0].defendant_summaries[0].application_summaries;",
											"    pm.expect(applications).to.be.a('array');",
											"});",
											"",
											"",
											"pm.test(\"Defendant Properties Are Correct\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendant = json_data.results[0].defendant_summaries[0];",
											"    pm.expect(defendant).to.haveOwnProperty('id');",
											"    pm.expect(defendant).to.haveOwnProperty('national_insurance_number');",
											"    pm.expect(defendant).to.haveOwnProperty('arrest_summons_number');",
											"    pm.expect(defendant).to.haveOwnProperty('first_name');",
											"    pm.expect(defendant).to.haveOwnProperty('middle_name');",
											"    pm.expect(defendant).to.haveOwnProperty('last_name');",
											"    pm.expect(defendant).to.haveOwnProperty('date_of_birth');",
											"    pm.expect(defendant).to.haveOwnProperty('proceedings_concluded');",
											"    pm.expect(defendant).to.haveOwnProperty('representation_order');",
											"    pm.expect(defendant).to.haveOwnProperty('offence_summaries');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"filter\": {\n    \"arrest_summons_number\": \"{{asn}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/prosecution_cases",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"prosecution_cases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Defendant national insurance number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Defendants Included\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.results[0]).to.haveOwnProperty('defendant_summaries');",
											"});",
											"",
											"pm.test(\"Results is Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Defendants within Results is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results[0].defendant_summaries;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Application summaries within Defendants is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var applications = json_data.results[0].defendant_summaries[0].application_summaries;",
											"    pm.expect(applications).to.be.a('array');",
											"});",
											"",
											"",
											"pm.test(\"Defendant Properties Are Correct\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendant = json_data.results[0].defendant_summaries[0];",
											"    pm.expect(defendant).to.haveOwnProperty('id');",
											"    pm.expect(defendant).to.haveOwnProperty('national_insurance_number');",
											"    pm.expect(defendant).to.haveOwnProperty('arrest_summons_number');",
											"    pm.expect(defendant).to.haveOwnProperty('first_name');",
											"    pm.expect(defendant).to.haveOwnProperty('middle_name');",
											"    pm.expect(defendant).to.haveOwnProperty('last_name');",
											"    pm.expect(defendant).to.haveOwnProperty('date_of_birth');",
											"    pm.expect(defendant).to.haveOwnProperty('proceedings_concluded');",
											"    pm.expect(defendant).to.haveOwnProperty('representation_order');",
											"    pm.expect(defendant).to.haveOwnProperty('offence_summaries');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"filter\": {\n    \"national_insurance_number\": \"{{nin}}\" // this will be redundnat soon as HMCTS do not have this data for most of thier defendants.\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/prosecution_cases",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"prosecution_cases"
									]
								}
							},
							"response": []
						},
						{
							"name": "Defendant name and date of birth Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Defendants Included\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.results[0]).to.haveOwnProperty('defendant_summaries');",
											"});",
											"",
											"pm.test(\"Results is Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Defendants within Results is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendants = json_data.results[0].defendant_summaries;",
											"    pm.expect(defendants).to.be.a('array');",
											"});",
											"",
											"",
											"pm.test(\"Application summaries within Defendants is an Array\", function () {",
											"    var json_data = pm.response.json();",
											"    var applications = json_data.results[0].defendant_summaries[0].application_summaries;",
											"    pm.expect(applications).to.be.a('array');",
											"});",
											"",
											"pm.test(\"Defendant Properties Are Correct\", function () {",
											"    var json_data = pm.response.json();",
											"    var defendant = json_data.results[0].defendant_summaries[0];",
											"    pm.expect(defendant).to.haveOwnProperty('id');",
											"    pm.expect(defendant).to.haveOwnProperty('national_insurance_number');",
											"    pm.expect(defendant).to.haveOwnProperty('arrest_summons_number');",
											"    pm.expect(defendant).to.haveOwnProperty('first_name');",
											"    pm.expect(defendant).to.haveOwnProperty('middle_name');",
											"    pm.expect(defendant).to.haveOwnProperty('last_name');",
											"    pm.expect(defendant).to.haveOwnProperty('date_of_birth');",
											"    pm.expect(defendant).to.haveOwnProperty('proceedings_concluded');",
											"    pm.expect(defendant).to.haveOwnProperty('representation_order');",
											"    pm.expect(defendant).to.haveOwnProperty('offence_summaries');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"filter\": {\n    \"date_of_birth\": \"{{defendant_dob}}\",\n    \"name\" : \"{{defendant_name}}\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/prosecution_cases",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"prosecution_cases"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Authenticate",
			"item": [
				{
					"name": "generate token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is within acceptable range\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"",
									"pm.test(\"accessToken Included\", function () {",
									"    var json_data = pm.response.json();",
									"    pm.expect(json_data.access_token).to.exist;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{clientSecret}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/oauth/token?grant_type=client_credentials",
							"host": [
								"{{url}}"
							],
							"path": [
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Hearings",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "V1 hearings with resulted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"hearing\": {\n        \"id\": \"13adec7b-0bd2-4c94-a773-ee7762d97824\",\n        \"jurisdictionType\": \"CROWN\",\n        \"courtCentre\": {\n            \"id\": \"6131bd34-33d9-3d1e-8152-8b5a2084f1bd\",\n            \"code\": \"C30DE00\"\n        },\n        \"type\": {\n            \"id\": \"e7d6a61f-41e5-4848-90d3-f2411566ba87\",\n            \"description\": \"First hearing\"\n        },\n        \"prosecutionCases\": [\n            {\n                \"id\": \"7be32c65-73a3-4c86-a649-0f5fd8114aaf\",\n                \"prosecutionCaseIdentifier\": {\n                    \"prosecutionAuthorityReference\": \"EWUJYYUJEH\"\n                },\n                // \"originatingOrganisation\": \"Goldner, Prohaska and Hauck\",\n                // \"initiationCode\": \"O\",\n                \"caseStatus\": \"ACTIVE\",\n                \"defendants\": [\n                    {\n                        \"id\": \"d693827c-3e02-4e7c-ad14-f0ffcf896542\",\n                        \"prosecutionCaseId\": \"7be32c65-73a3-4c86-a649-0f5fd8114aaf\",\n                        \"proceedingsConcluded\": true,\n                        \"offences\": [\n                            {\n                                \"id\": \"d50cf968-16b3-4702-847c-75da1762fd0b\",\n                                // \"offenceDefinitionId\": \"084cc312-8e01-485e-a836-c52273e83d5a\",\n                                \"offenceCode\": \"PT00011\",\n                                \"orderIndex\": 1,\n                                \"count\": 1,\n                                \"proceedingsConcluded\": true,\n                                \"judicialResults\": [\n                                    {\n                                        \"cjsCode\": \"4057\",\n                                        \"label\": \"Found guilty on all charges\",\n                                        \"resultText\": \"Result\",\n                                        \"qualifier\": \"Qualifier\",\n                                        \"orderedDate\": \"2022-02-17\",\n                                        \"postHearingCustodyStatus\": \"B\"\n                                    }\n                                ],\n                                // \"plea\": {\n                                //     \"originatingHearingId\": \"9dae4959-01a1-4854-a47f-bf8825223f29\",\n                                //     \"offenceId\": \"cf9160f8-dd61-4569-bfd7-1f3811d55de7\",\n                                //     // \"applicationId\": \"b71b3a59-82sx-8ebz-a478-bb846b9kd8s6\",\n                                //     \"pleaDate\": \"2022-02-16\",\n                                //     \"pleaValue\": \"NOT_GUILTY\"\n                                // },\n                                \"verdict\": {\n                                    \"offenceId\": \"d50cf968-16b3-4702-847c-75da1762fd0b\",\n                                    \"verdictDate\": \"2022-02-17\",\n                                    \"verdictType\": {\n                                        \"category\": \"A\",\n                                        \"categoryType\": \"GUILTY\"\n                                        // \"cjsVerdictCode\": \"1093\",\n                                        // \"verdictCode\": \"367A\"\n                                    }\n                                },\n                                \"laa_application\": {\n                                    \"reference\": \"6039357\",\n                                    \"id\": \"9ad60152-153d-44c2-be7f-df1471c17ce3\",\n                                    \"code\": \"AP\",\n                                    \"date\": \"2022-02-17\",\n                                    \"description\": \"FAKE NEWS\",\n                                    \"effective_start_date\": null,\n                                    \"effective_end_date\": null,\n                                    \"laa_contract_number\": null\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        ]\n    },\n    \"sharedTime\": \"2022-02-17T08:00:00.000Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/external/v1/hearings",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"external",
										"v1",
										"hearings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hearings results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Hearing type is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.attributes.hearing_type).to.exist;",
											"    pm.expect(json_data.data.attributes.hearing_type).to.be.a('string');",
											"});",
											"",
											"pm.test(\"Court name is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.attributes.court_name).to.exist;",
											"    pm.expect(json_data.data.attributes.court_name).to.be.a('string');",
											"});",
											"",
											"",
											"pm.test(\"Defendant names are present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.attributes.defendant_names).to.exist;",
											"    pm.expect(json_data.data.attributes.defendant_names).to.be.an('array');",
											"});",
											"",
											"pm.test(\"hearing_events are present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.relationships.hearing_events).to.exist;",
											"    pm.expect(json_data.data.relationships.hearing_events.data).to.be.an('array');",
											"});",
											"",
											"pm.test(\"prosecution_cases are present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.relationships.prosecution_cases).to.exist;",
											"    pm.expect(json_data.data.relationships.prosecution_cases.data).to.be.an('array');",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"result\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v1/hearings/{{hearingId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v1",
										"hearings",
										"{{hearingId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "V2",
					"item": [
						{
							"name": "V2 hearing_results = redundant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hearing\": {\n    \"id\": \"13adec7b-0bd2-4c94-a773-ee7762d97824\",\n    \"jurisdictionType\": \"MAGISTRATES\",\n    \"courtCentre\": {\n      \"id\": \"123e4567-e89b-12d3-a456-426614174001\"\n    },\n    \"type\": {\n      \"id\": \"123e4567-e89b-12d3-a456-426614174002\",\n      \"description\": \"Trial\"\n    },\n    \"hearingDays\": [\n      {\n        \"sittingDay\": \"2025-04-28T10:00:00Z\",\n        \"listingSequence\": 1,\n        \"listedDurationMinutes\": 120\n      },\n      {\n        \"sittingDay\": \"2025-04-29T10:00:00Z\",\n        \"listedDurationMinutes\": 90\n      }\n    ]\n  },\n  \"sharedTime\": \"2025-04-28T09:00:00Z\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/external/v2/hearing_results",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"external",
										"v2",
										"hearing_results"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hearing results",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"hearing object is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.hearing).to.exist;",
											"    pm.expect(json_data.hearing).to.be.a('object');",
											"});",
											"",
											"",
											"pm.test(\"court_centre is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.hearing.court_centre).to.exist;",
											"    pm.expect(json_data.hearing.court_centre).to.be.a('object');",
											"});",
											"",
											"pm.test(\"prosecution_cases is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.hearing.prosecution_cases).to.exist;",
											"    pm.expect(json_data.hearing.prosecution_cases).to.be.a('array');",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"result\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/hearing_results/{{hearingId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"hearing_results",
										"{{hearingId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Hearing event log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"hearing_id is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.hearing_id).to.exist;",
											"    pm.expect(json_data.hearing_id).to.be.a('string');",
											"});",
											"",
											"pm.test(\"has_active_hearing is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.has_active_hearing).to.exist;",
											"    pm.expect(json_data.has_active_hearing).to.be.a('boolean');",
											"});",
											"",
											"pm.test(\"events is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.events).to.exist;",
											"    pm.expect(json_data.events).to.be.a('array');",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"result\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/hearings/{{hearingId}}/event_log/{{hearingSittingDate}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"hearings",
										"{{hearingId}}",
										"event_log",
										"{{hearingSittingDate}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Defendants",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "Defendant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Defendants type is present in the response\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.type).to.exist;",
											"    pm.expect(json_data.data.type).to.eql(\"defendants\");",
											"});",
											"",
											"pm.test(\"Defendant Properties exist\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.attributes.name).to.exist;",
											"    pm.expect(json_data.data.attributes.date_of_birth).to.exist;",
											"    pm.expect(json_data.data.attributes.national_insurance_number).to.exist;",
											"    pm.expect(json_data.data.attributes.arrest_summons_number).to.exist;",
											"});",
											"",
											"pm.test(\"Prosecution case in relationships\", function () {",
											"    var json_data = pm.response.json();",
											"    pm.expect(json_data.data.relationships).to.exist;",
											"    pm.expect(json_data.data.relationships.prosecution_case).to.exist;",
											"    pm.expect(json_data.data.relationships.prosecution_case).to.exist;",
											"    pm.expect(json_data.data.relationships.prosecution_case).to.be.a('object');",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/api/internal/v1/defendants/{{defendant_summaries_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v1",
										"defendants",
										"{{defendant_summaries_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlink Defendant with no MAAT ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"defendants\",\n    \"attributes\": {\n      \"user_name\": \"work-c\", // username of the vcd user ie case worker\n      \"unlink_reason_code\": 1,\n      \"defendant_id\": \"c17c05bf-bfc1-4689-949d-acc313089dd7\"\n    }\n  }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v1/defendants/904a94f6-f12e-4997-a01a-ea32ed536df5",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v1",
										"defendants",
										"904a94f6-f12e-4997-a01a-ea32ed536df5"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Linking",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "V1 LAA Reference Link defendant to a MAAT I",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"laa_references\",\n    \"attributes\": {\n      \"defendant_id\": \"fb529421-160a-44e3-8e58-cb2706a3ce2b\",\n      \"user_name\": \"work-c\", // VCD username of ie case worker \n      \"maat_reference\": 6013545\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v1/laa_references",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v1",
										"laa_references"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "V2",
					"item": [
						{
							"name": "LAA reference unlink defendant from a MAAT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"laa_reference\" : {\n        \"defendant_id\": \"fb529421-160a-44e3-8e58-cb2706a3ce2b\",\n        \"user_name\": \"work-c\", // VCD username of ie case worker \n        \"unlink_reason_code\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/laa_references/{{laaApplicationId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"laa_references",
										"{{laaApplicationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "LAA reference link defendant to a MAAT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"laa_reference\" : {\n        \"defendant_id\": \"fb529421-160a-44e3-8e58-cb2706a3ce2b\",\n        \"user_name\": \"work-c\", // VCD username of ie case worker \n        \"unlink_reason_code\": 1\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v2/laa_references/{{laaApplicationId}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v2",
										"laa_references",
										"{{laaApplicationId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Concluded",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "Prosecution conclusions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"prosecutionConcluded\": [\n        {\n            \"prosecutionCaseId\": \"1a86e9ac-4148-490a-907b-c07b3d60242f\",\n            \"defendantId\": \"31ff5d19-be3a-4f5f-8683-cf822cf58378\",\n            \"isConcluded\": true,\n            \"hearingIdWhereChangeOccurred\": \"b0d914eb-6cf0-494d-891e-47658b7cc13f\",\n            \"offenceSummary\": [\n                {\n                    \"offenceId\": \"fd3a195b-ccab-43bb-a2ba-9abbbf7d30de\",\n                    \"offenceCode\": \"PT00011\",\n                    \"proceedingsConcluded\": false,\n                    \"proceedingsConcludedChangedDate\": \"2021-12-17\",\n                    \"verdict\": {\n                        \"originatingHearingId\": \"b0d914eb-6cf0-494d-891e-47658b7cc13f\",\n                        \"verdictDate\": \"2025-03-24T13:21:39.804Z\",\n                        \"verdictType\": {\n                            \"verdictTypeId\": \"66aeff3c-f546-441f-9b00-6569e978582c\",\n                            \"description\": \"Not Guilty\",\n                            \"category\": \"Not Guilty\",\n                            \"categoryType\": \"Not Known\",\n                            \"sequence\": 1163\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"prosecutionCaseId\": \"1a86e9ac-4148-490a-907b-c07b3d60242f\",\n            \"defendantId\": \"7e76e73c-de47-4c10-83b9-6bf1a4775e69\",\n            \"isConcluded\": true,\n            \"hearingIdWhereChangeOccurred\": \"b0d914eb-6cf0-494d-891e-47658b7cc13f\",\n            \"offenceSummary\": [\n                {\n                    \"offenceId\": \"c997cbc1-33be-423e-b078-7e9e6a677949\",\n                    \"offenceCode\": \"PT00011\",\n                    \"proceedingsConcluded\": false,\n                    \"proceedingsConcludedChangedDate\": \"2021-12-17\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/external/v1/prosecution_conclusions",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"external",
										"v1",
										"prosecution_conclusions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Court application conclusions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"prosecutionConcluded\": [\n        {\n            \"applicationConcluded\": {\n                \"applicationId\": \"cf9807ab-b001-4e2d-9b00-0857179f0f22\",\n                \"applicationResultCode\": \"APA\",\n                \"subjectId\": \"4a3b7428-ac5a-40d2-a648-1161930e4f80\"\n            },\n            \"isConcluded\": true,\n            \"hearingIdWhereChangeOccurred\": \"00d6a4e6-3699-4152-8548-68b39fa1d8f5\",\n            \"offenceSummary\": [\n                {\n                    \"offenceId\": \"49e641d3-d5bb-4ada-a1ef-607fb211f3b9\",\n                    \"offenceCode\": \"PT00011\",\n                    \"proceedingsConcluded\": false,\n                    \"proceedingsConcludedChangedDate\": \"2021-12-17\",\n                    \"verdict\": {\n                        \"originatingHearingId\": \"00d6a4e6-3699-4152-8548-68b39fa1d8f5\",\n                        \"verdictDate\": \"2025-03-24T12:27:55.192Z\",\n                        \"verdictType\": {\n                            \"verdictTypeId\": \"4db34a5d-5561-47d5-9eb7-80854848fd46\",\n                            \"description\": \"Not Guilty\",\n                            \"category\": \"Not Guilty\",\n                            \"categoryType\": \"Not Known\",\n                            \"sequence\": 1203\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/external/v1/prosecution_conclusions",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"external",
										"v1",
										"prosecution_conclusions"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Representation",
			"item": [
				{
					"name": "V1",
					"item": [
						{
							"name": "Representation orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(202);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"type\": \"representation_orders\",\n    \"attributes\": {\n      \"maat_reference\": 6013567,\n      \"defendant_id\": \"02d02c89-bb3d-4e7a-9575-8bb004ccd678\",\n      \"defence_organisation\": {\n        \"organisation\": {\n            \"name\": \"Dave reps order\"\n        },\n        \"laa_contract_number\": \"123456789\" // not sure were this is from probably I thin from crime apps.\n      },\n      \"offences\": [\n      {\n        \"offence_id\": \"d359c7fd-406e-41f3-93a3-4345bfb5f448\",\n        \"status_code\": \"AP\",\n        \"status_date\": \"2025-04-30\",\n        \"effective_start_date\": \"2025-04-01\",\n        \"effective_end_date\": \"2025-04-30\"\n      }\n    ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/api/internal/v1/representation_orders",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"internal",
										"v1",
										"representation_orders"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Appeals (Court application)",
			"item": [
				{
					"name": "Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Application attributes present in the response\", function () {",
									"    var json_data = pm.response.json();",
									"    pm.expect(json_data.application_id).to.exist;",
									"    pm.expect(json_data.short_id).to.exist;",
									"    pm.expect(json_data.application_reference).to.exist;",
									"    pm.expect(json_data.application_status).to.exist;",
									"    pm.expect(json_data.application_title).to.exist;",
									"    pm.expect(json_data.application_type).to.exist;",
									"    pm.expect(json_data.application_result).to.exist;",
									"    pm.expect(json_data.received_date).to.exist;",
									"});",
									"",
									"pm.test(\"Case summary present in the response\", function () {",
									"    var json_data = pm.response.json();",
									"    pm.expect(json_data.case_summary).to.exist;",
									"    pm.expect(json_data.case_summary).to.be.a('array');",
									"});",
									"",
									"",
									"pm.test(\"Subject summary present in the response and has attributes\", function () {",
									"    var json_data = pm.response.json();",
									"    pm.expect(json_data.subject_summary).to.exist;",
									"    pm.expect(json_data.subject_summary).to.be.a('object');",
									"    pm.expect(json_data.subject_summary.subject_id).to.exist;",
									"    pm.expect(json_data.subject_summary.defendant_asn).to.exist;",
									"    pm.expect(json_data.subject_summary.defendant_first_name).to.exist;",
									"    pm.expect(json_data.subject_summary.defendant_last_name).to.exist;",
									"    pm.expect(json_data.subject_summary.master_defendant_id).to.exist;",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/internal/v2/court_applications/{{applicationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"internal",
								"v2",
								"court_applications",
								"{{applicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Court application representation order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"type\": \"representation_orders\",\n    \"attributes\": {\n      \"maat_reference\": 6013567,\n      \"subject_id\": \"02d02c89-bb3d-4e7a-9575-8bb004ccd678\",\n      \"defence_organisation\": {\n        \"organisation\": {\n            \"name\": \"Dave reps order\"\n        },\n        \"laa_contract_number\": \"123456789\" // not sure were this is from probably I think from crime apps.\n      },\n      \"offences\": [\n      {\n        \"offence_id\": \"d359c7fd-406e-41f3-93a3-4345bfb5f448\",\n        \"status_code\": \"AP\",\n        \"status_date\": \"2025-04-30\",\n        \"effective_start_date\": \"2025-04-01\",\n        \"effective_end_date\": \"2025-04-30\"\n      }\n    ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/internal/v1/court_application_representation_orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"internal",
								"v1",
								"court_application_representation_orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "LAA court application reference unlink defendant from MAAT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"laa_reference\" : {\n        \"subject_id\": \"0566c538-afa5-4467-9666-845fe1ffd5e5\",\n        \"user_name\": \"work-c\", // VCD username of ie case worker \n        \"unlink_reason_code\": 0\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/internal/v2/court_application_laa_references/{{laaApplicationId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"internal",
								"v2",
								"court_application_laa_references",
								"{{laaApplicationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LAA court application reference link defendant to a MAAT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"laa_reference\" : {\n        \"subject_id\": \"0566c538-afa5-4467-9666-845fe1ffd5e5\",\n        \"user_name\": \"work-c\", // VCD username of ie case worker \n        \"maat_reference\": 6013589\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/internal/v2/court_application_laa_references",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"internal",
								"v2",
								"court_application_laa_references"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}